name: Deploy to QA environment

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build-test:
    name: Build, Test and Upload Coverage Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies in functions folder
        working-directory: functions
        run: npm install

      - name: Run Tests with Jest
        working-directory: functions
        run: npm test -- --coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: functions/coverage/lcov.info
  scan-sonar-cloud:
    name: Scan with SonarCloud
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code (Full History)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: functions/coverage

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.organization=fabiomoggi
            -Dsonar.projectKey=fabiomoggi_personal-budget-control
            -Dsonar.sources=functions/src/
            -Dsonar.tests=functions/test/
            -Dsonar.exclusions=**/*.spec.ts,**/*.test.ts
            -Dsonar.typescript.lcov.reportPaths=functions/coverage/lcov.info
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    name: Deploy to QA
    needs: [build-test, scan-sonar-cloud]
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        shell: bash
        working-directory: functions
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Prepare Google Application Credentials
        shell: bash
        run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 --decode > "google-application-credentials.json"

      - name: Deploy Firebase functions
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
        run: firebase deploy --only functions --non-interactive --debug --project personal-budget-control-8dc91

      - name: Remove credentials file
        if: success() || failure()
        run: |
          rm google-application-credentials.json
